1.git init                                      => Create New Repository
2.git status                                    => To see status
3.git add .                                     => To Stage all unStaged changes
4.git add (file name)                           => To stage particularfile(name)
5.git commit                                    => To commit staged changes
=========================================================================================================
6.git reset --hard                              => delete all staged and unstaged changes
7.git rebase -i head~2                          => it will rebase 2 commits with following option
        pick      -> pick commit 
        drop      -> delete commit
        reword    -> Edit commit message
        squash    -> join a commit with base commit(commit msg will be msg1+msg2)
        fixup     -> join a commit with base commit(commit msg will be only msg1)
=========================================================================================================
8.git checkout -b (branch name)                 => create new branch with given name and goes to the branch(name)
9.git checkout (branch name)                    => goes to the given branch name from current branch
10.git branch -u (branch name)                  => compare current branch with given branch(tracking)
11.git rebase                                   => take the tracking branch commit and join to the current branch
12.git push                                     => pushes your commit to the tracking branch
==========================================================================================================
13.git commit --amend --no-Edit                 => staged changes will be put to the last commit
14.git reset --hard origin/master               => all the changes(staged, unstaged,commited) will be removed. branch will be equal to the remote branch(origin/master)
15.git fetch -p                                 => refresh the origin changes.
16.git branch -d (branch name)                  => delete the given branch(name)
17.git cherry-pick (commit id)                  => git the commit id from any branch and applied the commit to the current branch
